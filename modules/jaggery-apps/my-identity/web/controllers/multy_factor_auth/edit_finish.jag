<%

var log = new Log();
var userName = session.get("user");
var identityClient = require('/controllers/multy_factor_auth/xmppConfigClient.jag');

var i18n = session.get("i18n");

function edit(){

    try{
    	
        try{
            require('../../authenticationHandler.jag');

        }catch(e){
            log.error(e);
            response.sendRedirect("login.jag?e=1&error=AuthenticationFail");
            return;
        }


        var editReq = <xsd:editXmppSettings xmlns:xsd="http://org.apache.axis2/xsd">
                      </xsd:editXmppSettings>;

        var addReq = <xsd:addUserXmppSettings xmlns:xsd="http://org.apache.axis2/xsd">
                        </xsd:addUserXmppSettings>;

        var req =      <xsd:dto xmlns:xsd="http://org.apache.axis2/xsd" xmlns:xsd1="http://dto.provider.identity.carbon.wso2.org/xsd">
                            <xsd1:PINEnabled></xsd1:PINEnabled>
                            <xsd1:userCode></xsd1:userCode>
                            <xsd1:userId></xsd1:userId>
                            <xsd1:xmppEnabled></xsd1:xmppEnabled>
                            <xsd1:xmppServer></xsd1:xmppServer>
                            <xsd1:xmppUserName></xsd1:xmppUserName>
                         </xsd:dto>

        var provider = request.getParameter('provider');
        var xmppUserName = request.getParameter('xmppUserName');
        var pinNumber = request.getParameter('pinNumber');
        var retypePIN = request.getParameter('retypePIN');
        var pinAuth = request.getParameter('pinAuth');
        var xmppEnabled = request.getParameter('xmppEnabled');

        var op = request.getParameter('op');
        var isEdit = (op != null && op === "e") ? true :false;

        pinAuth = (pinAuth != null && pinAuth === "true") ? true : false;
        xmppEnabled = (xmppEnabled != null && xmppEnabled === "true") ? true : false;

        if(pinNumber === retypePIN){
            req.*::PINEnabled.setChildren(pinAuth);
            req.*::userCode.setChildren(pinNumber);
            req.*::userId.setChildren(userName);
            req.*::xmppEnabled.setChildren(xmppEnabled);
            req.*::xmppServer.setChildren(provider);
            req.*::xmppUserName.setChildren(xmppUserName);

            if(isEdit){
                editReq.appendChild(req);
                identityClient.editXMPPConfig(editReq);
                log.debug(editReq);
            }else{
                addReq.appendChild(req);
                identityClient.addXMPPConfig(addReq);
            }

            response.sendRedirect("../../multifactor_authentication.jag?s=1&sMsg=xmpp_saved");
            return;

        }else{
            response.sendRedirect("../../multifactor_authentication.jag?e=1&error=pin_equal_error");
            return;
        }


    }
    catch(e){
        log.error(e);
        response.sendRedirect("../../index.jag?e=1&error=" + e);
    }

}

edit();


%>