<%

var log = new Log();
var userName = session.get("user");
var identityClient = require('identityMgtClient.jag');

var i18n = session.get("i18n");

function edit(){
	
//    try{
  //      require('../../authenticationHandler.jag');

    //}catch(e){
      //  log.error(e);
        //response.sendRedirect("login.jag?e=1&error=AuthenticationFail");
 //       return;
   // }


    try{
        var count = 1;
        var req = <ser:setChallengeQuestionsOfUser xmlns:ser="http://services.mgt.identity.carbon.wso2.org">
                               <ser:userName></ser:userName>
                            </ser:setChallengeQuestionsOfUser>;
        req.*::userName.setChildren(userName);

        while(true){
            var questionId = request.getParameter("challangedId_" + count);
            var question = request.getParameter("question_" + count);
            var ans = request.getParameter("ans_" + count);


            if(questionId == null || questionId.length == 0 ){
                break;
            }
            if(ans != null && ans.length > 0){
                var child = <ser:challengesDTOs xmlns:xsd="http://dto.mgt.identity.carbon.wso2.org/xsd" xmlns:ser="http://services.mgt.identity.carbon.wso2.org">
                                <xsd:answer>ans</xsd:answer>
                                <xsd:error></xsd:error>
                                <xsd:id></xsd:id>
                                <xsd:key></xsd:key>
                                <xsd:order></xsd:order>
                                <xsd:primary></xsd:primary>
                                <xsd:question></xsd:question>
                                <xsd:verfied></xsd:verfied>
                            </ser:challengesDTOs>;
                child.*::id.setChildren(questionId);
                child.*::question.setChildren(question);
                child.*::answer.setChildren(ans);
                child.*::primary.setChildren(false);
                child.*::verfied.setChildren(false);
                child.*::order.setChildren(0);

                req.appendChild(child);

            }
            count = count + 1;
        }

        identityClient.setChallengeQuestionsOfUser(req);
       // response.sendRedirect("../../account_recovery.jag?s=1&sMsg=updated_acc_rec_q");
    }
    catch(e){
        log.error(e);
        response.sendRedirect("../../index.jag?e=1&error=" + e);
    }

}

edit();


%>
